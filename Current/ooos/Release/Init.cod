; Listing generated by Microsoft (R) Optimizing Compiler Version 13.00.9466 

	TITLE	Init.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_09KHLGFNAD@IDLE?5proc?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01JPJNBJEM@I?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1DE@JBMIFNHF@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAh?$AAe?$AAl?$AAl?$AA?5?$AAP?$AAr?$AAo?$AAc?$AAe@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1M@GFEGCGOG@?$AAD?$AAo?$AAn?$AAe?$AA?6?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0ProcessNode@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Shell@@QAE@PAX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Init@@QAE@PAX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Init@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ProcessEntry@Init@@UAEXPAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7Init@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7Shell@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	?ShellProcess@@3PAVProcess@@A			; ShellProcess
_BSS	SEGMENT
?ShellProcess@@3PAVProcess@@A DD 01H DUP (?)		; ShellProcess
_BSS	ENDS
PUBLIC	??0Shell@@QAE@PAX0@Z				; Shell::Shell
PUBLIC	??_7Shell@@6B@					; Shell::`vftable'
EXTRN	??0Process@@QAE@PAX0@Z:NEAR			; Process::Process
EXTRN	?ProcessEntry@Shell@@UAEXPAPAX@Z:NEAR		; Shell::ProcessEntry
;	COMDAT ??_7Shell@@6B@
; File d:\my documents\projects\ooos\current\ooos\shell.h
CONST	SEGMENT
??_7Shell@@6B@ DD FLAT:?ProcessEntry@Shell@@UAEXPAPAX@Z	; Shell::`vftable'
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0Shell@@QAE@PAX0@Z
_TEXT	SEGMENT
_Start$ = 8
_End$ = 12
??0Shell@@QAE@PAX0@Z PROC NEAR				; Shell::Shell, COMDAT
; _this$ = ecx

; 7    : 	Shell(void * Start, void * End) : Process(Start, End) {};

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _End$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8b 4c 24 08	 mov	 ecx, DWORD PTR _Start$[esp]
  0000b	50		 push	 eax
  0000c	51		 push	 ecx
  0000d	8b ce		 mov	 ecx, esi
  0000f	e8 00 00 00 00	 call	 ??0Process@@QAE@PAX0@Z	; Process::Process
  00014	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7Shell@@6B@
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	c2 08 00	 ret	 8
??0Shell@@QAE@PAX0@Z ENDP				; Shell::Shell
_TEXT	ENDS
PUBLIC	??0Init@@QAE@PAX0@Z				; Init::Init
PUBLIC	?ProcessEntry@Init@@UAEXPAPAX@Z			; Init::ProcessEntry
PUBLIC	??_7Init@@6B@					; Init::`vftable'
;	COMDAT ??_7Init@@6B@
; File d:\my documents\projects\ooos\current\ooos\init.cpp
CONST	SEGMENT
??_7Init@@6B@ DD FLAT:?ProcessEntry@Init@@UAEXPAPAX@Z	; Init::`vftable'
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0Init@@QAE@PAX0@Z
_TEXT	SEGMENT
_Start$ = 8
_End$ = 12
??0Init@@QAE@PAX0@Z PROC NEAR				; Init::Init, COMDAT
; _this$ = ecx

; 10   : {

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _End$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8b 4c 24 08	 mov	 ecx, DWORD PTR _Start$[esp]
  0000b	50		 push	 eax
  0000c	51		 push	 ecx
  0000d	8b ce		 mov	 ecx, esi
  0000f	e8 00 00 00 00	 call	 ??0Process@@QAE@PAX0@Z	; Process::Process
  00014	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7Init@@6B@

; 11   : }

  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	c2 08 00	 ret	 8
??0Init@@QAE@PAX0@Z ENDP				; Init::Init
_TEXT	ENDS
PUBLIC	??1Init@@QAE@XZ					; Init::~Init
EXTRN	??1Process@@QAE@XZ:NEAR				; Process::~Process
; Function compile flags: /Ogty
;	COMDAT ??1Init@@QAE@XZ
_TEXT	SEGMENT
??1Init@@QAE@XZ PROC NEAR				; Init::~Init, COMDAT
; _this$ = ecx

; 14   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7Init@@6B@

; 15   : }

  00006	e9 00 00 00 00	 jmp	 ??1Process@@QAE@XZ	; Process::~Process
??1Init@@QAE@XZ ENDP					; Init::~Init
_TEXT	ENDS
PUBLIC	??_C@_09KHLGFNAD@IDLE?5proc?$AA@		; `string'
PUBLIC	??_C@_01JPJNBJEM@I?$AA@				; `string'
EXTRN	?printf@@YAXPBDZZ:NEAR				; printf
;	COMDAT ??_C@_09KHLGFNAD@IDLE?5proc?$AA@
; File d:\my documents\projects\ooos\current\ooos\shell.h
CONST	SEGMENT
??_C@_09KHLGFNAD@IDLE?5proc?$AA@ DB 'IDLE proc', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01JPJNBJEM@I?$AA@
CONST	SEGMENT
??_C@_01JPJNBJEM@I?$AA@ DB 'I', 00H			; `string'
; Function compile flags: /Ogty
; File d:\my documents\projects\ooos\current\ooos\init.cpp
CONST	ENDS
;	COMDAT ?ProcessEntry@Init@@UAEXPAPAX@Z
_TEXT	SEGMENT
_args$ = 8
?ProcessEntry@Init@@UAEXPAPAX@Z PROC NEAR		; Init::ProcessEntry, COMDAT
; _this$ = ecx

; 21   : 	printf("IDLE proc");

  00000	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09KHLGFNAD@IDLE?5proc?$AA@
$L647:
  00005	e8 00 00 00 00	 call	 ?printf@@YAXPBDZZ	; printf
  0000a	83 c4 04	 add	 esp, 4

; 22   : 	//__asm CLI;
; 23   : 	while(1) printf("I");

  0000d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01JPJNBJEM@I?$AA@
  00012	eb f1		 jmp	 SHORT $L647
?ProcessEntry@Init@@UAEXPAPAX@Z ENDP			; Init::ProcessEntry
_TEXT	ENDS
END
