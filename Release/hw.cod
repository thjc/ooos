; Listing generated by Microsoft (R) Optimizing Compiler Version 13.00.9466 

	TITLE	hw.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0M@KPLPPDAC@Hello?5World?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _main
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	_main
PUBLIC	??_C@_0M@KPLPPDAC@Hello?5World?$AA@		; `string'
;	COMDAT ??_C@_0M@KPLPPDAC@Hello?5World?$AA@
; File d:\my documents\projects\ooos\hw.cpp
CONST	SEGMENT
??_C@_0M@KPLPPDAC@Hello?5World?$AA@ DB 'Hello World', 00H ; `string'
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT _main
_TEXT	SEGMENT
_HWS$ = -12
_main	PROC NEAR					; COMDAT

; 4    : {

  00000	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 5    : 	BYTE Colour = 0x4;
; 6    : 	char HWS[12] = "Hello World";

  00003	a1 04 00 00 00	 mov	 eax, DWORD PTR ??_C@_0M@KPLPPDAC@Hello?5World?$AA@+4
  00008	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0M@KPLPPDAC@Hello?5World?$AA@+8
  0000e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0M@KPLPPDAC@Hello?5World?$AA@
  00014	89 44 24 04	 mov	 DWORD PTR _HWS$[esp+16], eax
  00018	89 54 24 08	 mov	 DWORD PTR _HWS$[esp+20], edx

; 7    : 	BYTE * VidMem = reinterpret_cast<BYTE *> (0xB8000);
; 8    : 	for (BYTE i = 0; HWS[i] != '\0'; ++i)

  0001c	32 d2		 xor	 dl, dl
  0001e	33 c0		 xor	 eax, eax
  00020	84 c9		 test	 cl, cl
  00022	89 4c 24 00	 mov	 DWORD PTR _HWS$[esp+12], ecx
  00026	74 26		 je	 SHORT $L280

; 12   : 	}
; 13   : }

  00028	eb 06 8d 9b 00
	00 00 00	 npad	 8
$L278:

; 9    : 	{
; 10   : 		VidMem[(i<<1) + 1] = Colour;

  00030	c6 04 45 01 80
	0b 00 04	 mov	 BYTE PTR [eax*2+753665], 4
  00038	fe c2		 inc	 dl

; 11   : 		VidMem[(i<<1)] = HWS[i];

  0003a	88 0c 45 00 80
	0b 00		 mov	 BYTE PTR [eax*2+753664], cl
  00041	0f b6 c2	 movzx	 eax, dl
  00044	8a 4c 04 00	 mov	 cl, BYTE PTR _HWS$[esp+eax+12]
  00048	84 c9		 test	 cl, cl
  0004a	75 e4		 jne	 SHORT $L278

; 12   : 	}
; 13   : }

  0004c	33 c0		 xor	 eax, eax
$L280:
  0004e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00051	c3		 ret	 0
_main	ENDP
_TEXT	ENDS
END
