; Listing generated by Microsoft (R) Optimizing Compiler Version 13.00.9466 

	TITLE	Test.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0CA@NHFPHKEL@Display?5Initialised?6Welcome?5to?5?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@JLPLHDED@Caboose?5v0?40?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@IANDDPBC@Setting?5up?5IDT?5?4?4?4?5?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05KOJMJHML@Done?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CB@EIGMDFIP@Enable?5PIC?8s?5and?5interrupts?5?4?4?4?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@DFEBMBLF@?6Thats?5all?5Folks?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?KernelEntry@@YAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBC
INCLUDELIB OLDNAMES

PUBLIC	?IDTAddress@@3PAKA				; IDTAddress
PUBLIC	?GDTAddress@@3PAKA				; GDTAddress
_BSS	SEGMENT
?IDTAddress@@3PAKA DD 01H DUP (?)			; IDTAddress
_BSS	ENDS
_DATA	SEGMENT
?GDTAddress@@3PAKA DD 0800H				; GDTAddress
_DATA	ENDS
PUBLIC	?KernelEntry@@YAXXZ				; KernelEntry
PUBLIC	??_C@_0CA@NHFPHKEL@Display?5Initialised?6Welcome?5to?5?$AA@ ; `string'
PUBLIC	??_C@_0O@JLPLHDED@Caboose?5v0?40?6?$AA@		; `string'
PUBLIC	??_C@_0BE@IANDDPBC@Setting?5up?5IDT?5?4?4?4?5?$AA@ ; `string'
PUBLIC	??_C@_05KOJMJHML@Done?6?$AA@			; `string'
PUBLIC	??_C@_0CB@EIGMDFIP@Enable?5PIC?8s?5and?5interrupts?5?4?4?4?5@ ; `string'
PUBLIC	??_C@_01CLKCMJKC@?5?$AA@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
EXTRN	??0VideoDriver@@QAE@XZ:NEAR			; VideoDriver::VideoDriver
EXTRN	?SetColour@VideoDriver@@QAEXE@Z:NEAR		; VideoDriver::SetColour
EXTRN	?WriteString@VideoDriver@@QAEXPAD@Z:NEAR	; VideoDriver::WriteString
EXTRN	?ClearScreen@VideoDriver@@QAEXXZ:NEAR		; VideoDriver::ClearScreen
EXTRN	?WriteHexByte@VideoDriver@@QAEXE@Z:NEAR		; VideoDriver::WriteHexByte
EXTRN	?KeyboardISR@KeyboardDriver@@SAXXZ:NEAR		; KeyboardDriver::KeyboardISR
EXTRN	?Count@KeyboardDriver@@2EC:BYTE			; KeyboardDriver::Count
;	COMDAT ??_C@_0CA@NHFPHKEL@Display?5Initialised?6Welcome?5to?5?$AA@
; File d:\my documents\projects\ooos\test.cpp
CONST	SEGMENT
??_C@_0CA@NHFPHKEL@Display?5Initialised?6Welcome?5to?5?$AA@ DB 'Display I'
	DB	'nitialised', 0aH, 'Welcome to ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JLPLHDED@Caboose?5v0?40?6?$AA@
CONST	SEGMENT
??_C@_0O@JLPLHDED@Caboose?5v0?40?6?$AA@ DB 'Caboose v0.0', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IANDDPBC@Setting?5up?5IDT?5?4?4?4?5?$AA@
CONST	SEGMENT
??_C@_0BE@IANDDPBC@Setting?5up?5IDT?5?4?4?4?5?$AA@ DB 'Setting up IDT ...'
	DB	' ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_05KOJMJHML@Done?6?$AA@
CONST	SEGMENT
??_C@_05KOJMJHML@Done?6?$AA@ DB 'Done', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@EIGMDFIP@Enable?5PIC?8s?5and?5interrupts?5?4?4?4?5@
CONST	SEGMENT
??_C@_0CB@EIGMDFIP@Enable?5PIC?8s?5and?5interrupts?5?4?4?4?5@ DB 'Enable '
	DB	'PIC''s and interrupts ... ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5?$AA@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ?KernelEntry@@YAXXZ
_TEXT	SEGMENT
_Command$369 = -13
_Return$368 = -12
_i_VideoDriver$ = -8
?KernelEntry@@YAXXZ PROC NEAR				; KernelEntry, COMDAT

; 20   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 10	 sub	 esp, 16			; 00000010H

; 21   : 	// Display start up messages
; 22   : 	VideoDriver i_VideoDriver;

  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR _i_VideoDriver$[esp+16]
  0000d	e8 00 00 00 00	 call	 ??0VideoDriver@@QAE@XZ	; VideoDriver::VideoDriver

; 23   : 	i_VideoDriver.ClearScreen();

  00012	8d 4c 24 08	 lea	 ecx, DWORD PTR _i_VideoDriver$[esp+16]
  00016	e8 00 00 00 00	 call	 ?ClearScreen@VideoDriver@@QAEXXZ ; VideoDriver::ClearScreen

; 24   : 	i_VideoDriver.WriteString("Display Initialised\nWelcome to ");

  0001b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CA@NHFPHKEL@Display?5Initialised?6Welcome?5to?5?$AA@
  00020	8d 4c 24 0c	 lea	 ecx, DWORD PTR _i_VideoDriver$[esp+20]
  00024	e8 00 00 00 00	 call	 ?WriteString@VideoDriver@@QAEXPAD@Z ; VideoDriver::WriteString

; 25   : 	i_VideoDriver.SetColour(9);

  00029	6a 09		 push	 9
  0002b	8d 4c 24 0c	 lea	 ecx, DWORD PTR _i_VideoDriver$[esp+20]
  0002f	e8 00 00 00 00	 call	 ?SetColour@VideoDriver@@QAEXE@Z ; VideoDriver::SetColour

; 26   : 	i_VideoDriver.WriteString("Caboose v0.0\n");

  00034	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@JLPLHDED@Caboose?5v0?40?6?$AA@
  00039	8d 4c 24 0c	 lea	 ecx, DWORD PTR _i_VideoDriver$[esp+20]
  0003d	e8 00 00 00 00	 call	 ?WriteString@VideoDriver@@QAEXPAD@Z ; VideoDriver::WriteString

; 27   : 	i_VideoDriver.SetColour(15);

  00042	6a 0f		 push	 15			; 0000000fH
  00044	8d 4c 24 0c	 lea	 ecx, DWORD PTR _i_VideoDriver$[esp+20]
  00048	e8 00 00 00 00	 call	 ?SetColour@VideoDriver@@QAEXE@Z ; VideoDriver::SetColour

; 28   : 
; 29   : 	i_VideoDriver.WriteString("Setting up IDT ... ");

  0004d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@IANDDPBC@Setting?5up?5IDT?5?4?4?4?5?$AA@
  00052	8d 4c 24 0c	 lea	 ecx, DWORD PTR _i_VideoDriver$[esp+20]
  00056	e8 00 00 00 00	 call	 ?WriteString@VideoDriver@@QAEXPAD@Z ; VideoDriver::WriteString

; 30   : 	// set up IRQ1 (Keyboard) Interrupt Gate
; 31   : 	IDTAddress[0x21 * 2 + 1] = 0x00008E00 | (reinterpret_cast<const unsigned long> (KeyboardDriver::KeyboardISR) & 0xFFFF0000); 

  0005b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?IDTAddress@@3PAKA ; IDTAddress
  00061	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?KeyboardISR@KeyboardDriver@@SAXXZ ; KeyboardDriver::KeyboardISR
  00066	25 00 8e ff ff	 and	 eax, -29184		; ffff8e00H
  0006b	0d 00 8e 00 00	 or	 eax, 36352		; 00008e00H
  00070	89 81 0c 01 00
	00		 mov	 DWORD PTR [ecx+268], eax

; 32   : 	IDTAddress[0x21 * 2] = 0x00080000 | (reinterpret_cast<const unsigned long> (KeyboardDriver::KeyboardISR) & 0x0000FFFF); 

  00076	a1 00 00 00 00	 mov	 eax, DWORD PTR ?IDTAddress@@3PAKA ; IDTAddress
  0007b	ba 00 00 00 00	 mov	 edx, OFFSET FLAT:?KeyboardISR@KeyboardDriver@@SAXXZ ; KeyboardDriver::KeyboardISR
  00080	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00086	81 ca 00 00 08
	00		 or	 edx, 524288		; 00080000H

; 33   : 	i_VideoDriver.WriteString("Done\n");

  0008c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_05KOJMJHML@Done?6?$AA@
  00091	8d 4c 24 0c	 lea	 ecx, DWORD PTR _i_VideoDriver$[esp+20]
  00095	89 90 08 01 00
	00		 mov	 DWORD PTR [eax+264], edx
  0009b	e8 00 00 00 00	 call	 ?WriteString@VideoDriver@@QAEXPAD@Z ; VideoDriver::WriteString

; 34   : 
; 35   : 	i_VideoDriver.WriteString("Enable PIC's and interrupts ... ");

  000a0	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CB@EIGMDFIP@Enable?5PIC?8s?5and?5interrupts?5?4?4?4?5@
  000a5	8d 4c 24 0c	 lea	 ecx, DWORD PTR _i_VideoDriver$[esp+20]
  000a9	e8 00 00 00 00	 call	 ?WriteString@VideoDriver@@QAEXPAD@Z ; VideoDriver::WriteString

; 36   :     __asm
; 37   : 	{
; 38   : 		// ICW1
; 39   : 		MOV al, 0x11

  000ae	b0 11		 mov	 al, 17			; 00000011H

; 40   : 		OUT IO_PIC1, al

  000b0	e6 20		 out	 32, al			; 00000020H

; 41   : 		OUT IO_PIC2, al

  000b2	e6 a0		 out	 160, al			; 000000a0H

; 42   : 
; 43   : 		// ICW2
; 44   : 		MOV al, 0x20

  000b4	b0 20		 mov	 al, 32			; 00000020H

; 45   : 		OUT IO_PIC1+1, al

  000b6	e6 21		 out	 33, al			; 00000021H

; 46   : 
; 47   : 		MOV al, 0x28

  000b8	b0 28		 mov	 al, 40			; 00000028H

; 48   : 		OUT IO_PIC2+1, al

  000ba	e6 a1		 out	 161, al			; 000000a1H

; 49   : 
; 50   : 		// ICW3
; 51   : 		MOV al, 0x04

  000bc	b0 04		 mov	 al, 4

; 52   : 		OUT IO_PIC1+1, al

  000be	e6 21		 out	 33, al			; 00000021H

; 53   : 
; 54   : 		MOV al, 0x02

  000c0	b0 02		 mov	 al, 2

; 55   : 		OUT IO_PIC2+1, al

  000c2	e6 a1		 out	 161, al			; 000000a1H

; 56   : 
; 57   : 		// ICW4
; 58   : 		MOV al, 0x01

  000c4	b0 01		 mov	 al, 1

; 59   : 		OUT IO_PIC1+1, al

  000c6	e6 21		 out	 33, al			; 00000021H

; 60   : 		OUT IO_PIC2+1, al

  000c8	e6 a1		 out	 161, al			; 000000a1H

; 61   : 
; 62   : 		// PIC's are set up
; 63   : 		// now unmask keybd interrupt
; 64   : 		MOV al, 0xFD

  000ca	b0 fd		 mov	 al, -3			; fffffffdH

; 65   : 		OUT IO_PIC1 + 1, al

  000cc	e6 21		 out	 33, al			; 00000021H

; 66   : 		MOV al, 0xFF

  000ce	b0 ff		 mov	 al, -1

; 67   : 		OUT IO_PIC2 + 1, al

  000d0	e6 a1		 out	 161, al			; 000000a1H

; 68   : 
; 69   : 		// Enable Interupts
; 70   : 		STI

  000d2	fb		 sti

; 71   : 	}
; 72   : 
; 73   : 	i_VideoDriver.WriteString("Done\n");

  000d3	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_05KOJMJHML@Done?6?$AA@
  000d8	8d 4c 24 0c	 lea	 ecx, DWORD PTR _i_VideoDriver$[esp+20]
  000dc	e8 00 00 00 00	 call	 ?WriteString@VideoDriver@@QAEXPAD@Z ; VideoDriver::WriteString

; 74   : 
; 75   : 	
; 76   : 
; 77   : 	// interrupt test
; 78   : 	while(1)
; 79   : 	{
; 80   : 		i_VideoDriver.WriteHexByte(KeyboardDriver::Count);
; 81   : 		i_VideoDriver.WriteString(" ");
; 82   : 
; 83   : 		BYTE Return, Command;
; 84   : 
; 85   : 		Command = 0x0A;

  000e1	c6 44 24 03 0a	 mov	 BYTE PTR _Command$369[esp+16], 10 ; 0000000aH
$L365:
  000e6	33 c9		 xor	 ecx, ecx
  000e8	8a 0d 00 00 00
	00		 mov	 cl, BYTE PTR ?Count@KeyboardDriver@@2EC ; KeyboardDriver::Count
  000ee	51		 push	 ecx
  000ef	8d 4c 24 0c	 lea	 ecx, DWORD PTR _i_VideoDriver$[esp+20]
  000f3	e8 00 00 00 00	 call	 ?WriteHexByte@VideoDriver@@QAEXE@Z ; VideoDriver::WriteHexByte
  000f8	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01CLKCMJKC@?5?$AA@
  000fd	8d 4c 24 0c	 lea	 ecx, DWORD PTR _i_VideoDriver$[esp+20]
  00101	e8 00 00 00 00	 call	 ?WriteString@VideoDriver@@QAEXPAD@Z ; VideoDriver::WriteString

; 86   : 		__asm
; 87   : 		{
; 88   : 			MOV al, Command

  00106	8a 44 24 03	 mov	 al, BYTE PTR _Command$369[esp+16]

; 89   : 			OUT IO_PIC1, al

  0010a	e6 20		 out	 32, al			; 00000020H

; 90   : 			IN al, IO_PIC1

  0010c	e4 20		 in	 al, 32			; 00000020H

; 91   : 			MOV Return, al

  0010e	88 44 24 04	 mov	 BYTE PTR _Return$368[esp+16], al

; 92   : 		}
; 93   : 		i_VideoDriver.WriteHexByte(Return);

  00112	8b 54 24 04	 mov	 edx, DWORD PTR _Return$368[esp+16]
  00116	52		 push	 edx
  00117	8d 4c 24 0c	 lea	 ecx, DWORD PTR _i_VideoDriver$[esp+20]
  0011b	e8 00 00 00 00	 call	 ?WriteHexByte@VideoDriver@@QAEXE@Z ; VideoDriver::WriteHexByte

; 94   : 		i_VideoDriver.WriteString("\n");

  00120	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
  00125	8d 4c 24 0c	 lea	 ecx, DWORD PTR _i_VideoDriver$[esp+20]
  00129	e8 00 00 00 00	 call	 ?WriteString@VideoDriver@@QAEXPAD@Z ; VideoDriver::WriteString

; 95   : 
; 96   : 
; 97   : 	}

  0012e	eb b6		 jmp	 SHORT $L365
?KernelEntry@@YAXXZ ENDP				; KernelEntry
_TEXT	ENDS
END
